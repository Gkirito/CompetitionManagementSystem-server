<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juno.competitionmanagementsystemserver.mapper.CompetitionResultMapper">
  <resultMap id="BaseResultMap" type="com.juno.competitionmanagementsystemserver.model.CompetitionResult">
    <!--@mbg.generated-->
    <!--@Table graduation.competition_result-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="com_id" jdbcType="INTEGER" property="comId" />
    <result column="team_id" jdbcType="INTEGER" property="teamId" />
    <result column="award_level" jdbcType="VARCHAR" property="awardLevel" />
    <result column="result_time" jdbcType="DATE" property="resultTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="order" jdbcType="TINYINT" property="order" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, com_id, team_id, award_level, result_time, create_time, update_time, `order`
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update graduation.competition_result
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="com_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.comId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="team_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.teamId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="award_level = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.awardLevel,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="result_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.resultTime,jdbcType=DATE}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="`order` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.order,jdbcType=TINYINT}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update graduation.competition_result
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="com_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.comId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.comId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="team_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.teamId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.teamId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="award_level = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.awardLevel != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.awardLevel,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="result_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.resultTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.resultTime,jdbcType=DATE}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="`order` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.order != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.order,jdbcType=TINYINT}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into graduation.competition_result
    (com_id, team_id, award_level, result_time, create_time, update_time, `order`)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.comId,jdbcType=INTEGER}, #{item.teamId,jdbcType=INTEGER}, #{item.awardLevel,jdbcType=VARCHAR}, 
        #{item.resultTime,jdbcType=DATE}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.order,jdbcType=TINYINT})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.juno.competitionmanagementsystemserver.model.CompetitionResult" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into graduation.competition_result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      com_id,
      team_id,
      award_level,
      result_time,
      create_time,
      update_time,
      `order`,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{comId,jdbcType=INTEGER},
      #{teamId,jdbcType=INTEGER},
      #{awardLevel,jdbcType=VARCHAR},
      #{resultTime,jdbcType=DATE},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
      #{order,jdbcType=TINYINT},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      com_id = #{comId,jdbcType=INTEGER},
      team_id = #{teamId,jdbcType=INTEGER},
      award_level = #{awardLevel,jdbcType=VARCHAR},
      result_time = #{resultTime,jdbcType=DATE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `order` = #{order,jdbcType=TINYINT},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.juno.competitionmanagementsystemserver.model.CompetitionResult" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into graduation.competition_result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="comId != null">
        com_id,
      </if>
      <if test="teamId != null">
        team_id,
      </if>
      <if test="awardLevel != null">
        award_level,
      </if>
      <if test="resultTime != null">
        result_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="order != null">
        `order`,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="comId != null">
        #{comId,jdbcType=INTEGER},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=INTEGER},
      </if>
      <if test="awardLevel != null">
        #{awardLevel,jdbcType=VARCHAR},
      </if>
      <if test="resultTime != null">
        #{resultTime,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="order != null">
        #{order,jdbcType=TINYINT},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="comId != null">
        com_id = #{comId,jdbcType=INTEGER},
      </if>
      <if test="teamId != null">
        team_id = #{teamId,jdbcType=INTEGER},
      </if>
      <if test="awardLevel != null">
        award_level = #{awardLevel,jdbcType=VARCHAR},
      </if>
      <if test="resultTime != null">
        result_time = #{resultTime,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="order != null">
        `order` = #{order,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
</mapper>