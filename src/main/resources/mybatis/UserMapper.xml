<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juno.competitionmanagementsystemserver.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.juno.competitionmanagementsystemserver.model.User">
    <!--@mbg.generated-->
    <!--@Table graduation.`user`-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="nickName" jdbcType="VARCHAR" property="nickname" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="verification_time" jdbcType="TIMESTAMP" property="verificationTime" />
    <result column="session_key" jdbcType="VARCHAR" property="sessionKey" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="avatarUrl" jdbcType="VARCHAR" property="avatarurl" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="stu_id" jdbcType="INTEGER" property="stuId" />
    <result column="tea_id" jdbcType="INTEGER" property="teaId" />
    <result column="Identity" jdbcType="VARCHAR" property="identity" />
    <result column="manage_id" jdbcType="INTEGER" property="manageId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, nickName, create_time, updated_time, open_id, verification_time, session_key, 
    phone, avatarUrl, gender, `language`, city, country, province, `password`, stu_id, 
    tea_id, `Identity`, manage_id
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update graduation.`user`
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="nickName = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.nickname,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updatedTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="open_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.openId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="verification_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.verificationTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="session_key = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.sessionKey,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="phone = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.phone,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="avatarUrl = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.avatarurl,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="gender = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.gender,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="`language` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.language,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="city = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.city,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="country = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.country,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="province = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.province,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`password` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.password,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="stu_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.stuId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="tea_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.teaId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="`Identity` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.identity,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="manage_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.manageId,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update graduation.`user`
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="nickName = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.nickname != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.nickname,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updatedTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.updatedTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="open_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.openId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.openId,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="verification_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.verificationTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.verificationTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="session_key = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.sessionKey != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.sessionKey,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="phone = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.phone != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.phone,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="avatarUrl = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.avatarurl != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.avatarurl,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="gender = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.gender != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.gender,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="`language` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.language != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.language,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="city = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.city != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.city,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="country = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.country != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.country,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="province = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.province != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.province,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="`password` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.password != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.password,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="stu_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.stuId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.stuId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="tea_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.teaId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.teaId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="`Identity` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.identity != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.identity,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="manage_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.manageId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.manageId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into graduation.`user`
    (nickName, create_time, updated_time, open_id, verification_time, session_key, phone, 
      avatarUrl, gender, `language`, city, country, province, `password`, stu_id, tea_id, 
      `Identity`, manage_id)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.nickname,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updatedTime,jdbcType=TIMESTAMP}, 
        #{item.openId,jdbcType=VARCHAR}, #{item.verificationTime,jdbcType=TIMESTAMP}, #{item.sessionKey,jdbcType=VARCHAR}, 
        #{item.phone,jdbcType=VARCHAR}, #{item.avatarurl,jdbcType=VARCHAR}, #{item.gender,jdbcType=INTEGER}, 
        #{item.language,jdbcType=VARCHAR}, #{item.city,jdbcType=VARCHAR}, #{item.country,jdbcType=VARCHAR}, 
        #{item.province,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, #{item.stuId,jdbcType=INTEGER}, 
        #{item.teaId,jdbcType=INTEGER}, #{item.identity,jdbcType=VARCHAR}, #{item.manageId,jdbcType=INTEGER}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.juno.competitionmanagementsystemserver.model.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into graduation.`user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      nickName,
      create_time,
      updated_time,
      open_id,
      verification_time,
      session_key,
      phone,
      avatarUrl,
      gender,
      `language`,
      city,
      country,
      province,
      `password`,
      stu_id,
      tea_id,
      `Identity`,
      manage_id,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{nickname,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{updatedTime,jdbcType=TIMESTAMP},
      #{openId,jdbcType=VARCHAR},
      #{verificationTime,jdbcType=TIMESTAMP},
      #{sessionKey,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR},
      #{avatarurl,jdbcType=VARCHAR},
      #{gender,jdbcType=INTEGER},
      #{language,jdbcType=VARCHAR},
      #{city,jdbcType=VARCHAR},
      #{country,jdbcType=VARCHAR},
      #{province,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR},
      #{stuId,jdbcType=INTEGER},
      #{teaId,jdbcType=INTEGER},
      #{identity,jdbcType=VARCHAR},
      #{manageId,jdbcType=INTEGER},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      nickName = #{nickname,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      open_id = #{openId,jdbcType=VARCHAR},
      verification_time = #{verificationTime,jdbcType=TIMESTAMP},
      session_key = #{sessionKey,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      avatarUrl = #{avatarurl,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      `language` = #{language,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      stu_id = #{stuId,jdbcType=INTEGER},
      tea_id = #{teaId,jdbcType=INTEGER},
      `Identity` = #{identity,jdbcType=VARCHAR},
      manage_id = #{manageId,jdbcType=INTEGER},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.juno.competitionmanagementsystemserver.model.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into graduation.`user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nickname != null">
        nickName,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="verificationTime != null">
        verification_time,
      </if>
      <if test="sessionKey != null">
        session_key,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="avatarurl != null">
        avatarUrl,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="language != null">
        `language`,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="teaId != null">
        tea_id,
      </if>
      <if test="identity != null">
        `Identity`,
      </if>
      <if test="manageId != null">
        manage_id,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="verificationTime != null">
        #{verificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sessionKey != null">
        #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="avatarurl != null">
        #{avatarurl,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="teaId != null">
        #{teaId,jdbcType=INTEGER},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=VARCHAR},
      </if>
      <if test="manageId != null">
        #{manageId,jdbcType=INTEGER},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        nickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="verificationTime != null">
        verification_time = #{verificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sessionKey != null">
        session_key = #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="avatarurl != null">
        avatarUrl = #{avatarurl,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="language != null">
        `language` = #{language,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=INTEGER},
      </if>
      <if test="teaId != null">
        tea_id = #{teaId,jdbcType=INTEGER},
      </if>
      <if test="identity != null">
        `Identity` = #{identity,jdbcType=VARCHAR},
      </if>
      <if test="manageId != null">
        manage_id = #{manageId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
</mapper>